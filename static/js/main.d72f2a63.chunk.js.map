{"version":3,"sources":["components/header/Header.js","components/main/Search.js","components/main/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Search","props","gettwitte","search","count","console","log","alert","api","axios","get","headers","Authorization","then","res","setState","tweet","data","statuses","handleChange","e","handleSubmit","preventDefault","target","value","state","result_type","this","onSubmit","placeholder","onChange","disabled","selected","map","tw","key","id_str","tweetId","Main","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d72f2a63.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Feed Twitter\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarColor01\"\r\n            aria-controls=\"navbarColor01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarColor01 \">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Home <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Favoris\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Live Tweets\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"form-inline my-2 my-lg-0\">\r\n              <input\r\n                className=\"form-control mr-sm-2\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import Parser from \"html-react-parser\";\r\nimport axios from \"axios\";\r\n\r\n// import Navbar from './Navbar';\r\nimport {\r\n  TwitterTimelineEmbed,\r\n  TwitterShareButton,\r\n  TwitterFollowButton,\r\n  TwitterHashtagButton,\r\n  TwitterMentionButton,\r\n  TwitterTweetEmbed,\r\n  TwitterMomentShare,\r\n  TwitterDMButton,\r\n  TwitterVideoEmbed,\r\n  TwitterOnAirButton,\r\n} from \"react-twitter-embed\";\r\nexport class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tweet: [],\r\n      search: \"\",\r\n      result_type: \"mixed\",\r\n      count: 1,\r\n    };\r\n  }\r\n\r\n  gettwitte = (search, count) => {\r\n    console.log(search);\r\n    if (search == \"\") {\r\n      alert(\"merci de mettre un mot pour la recherche\");\r\n    } else {\r\n      const api = `https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/search/tweets.json?q=${search}&result_type=mixed&count=${count}`;\r\n      const token = `AAAAAAAAAAAAAAAAAAAAAAs5%2FAAAAAAA%2BFhxtLDRr2AuKh5zdIHTczhg0Jg%3DltF0dqGzLFlmXH9wjI8HkO1gEzGlnCYUegwIOVVu1Umn8Yi1sX`;\r\n      axios\r\n        .get(api, { headers: { Authorization: `Bearer ${token}` } })\r\n        .then((res) => {\r\n          this.setState({\r\n            tweet: res.data.statuses,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    // console.log(e.target.value);\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(e.target[0].value);\r\n    this.setState({ search: e.target[0].value });\r\n    // console.log(e.target[1].value);\r\n    this.setState({ count: e.target[1].value });\r\n  };\r\n  componentDidUpdate() {\r\n    // console.log(this.state.search);\r\n    this.gettwitte(this.state.search, this.state.count);\r\n  }\r\n  componentDidMount() {}\r\n\r\n  // Git=(data)=>{\r\n\r\n  //     const api = `https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/search/tweets.json?q=%23${data}&result_type=recent`;\r\n  //     const token = `AAAAAAAAAAAAAAAAAAAAAAs5%2FAAAAAAA%2BFhxtLDRr2AuKh5zdIHTczhg0Jg%3DltF0dqGzLFlmXH9wjI8HkO1gEzGlnCYUegwIOVVu1Umn8Yi1sX`;\r\n  //     axios.get(api, { headers: {\"Authorization\" : `Bearer ${token}`} }).then(res => {\r\n  //        console.log(res.data.statuses)\r\n  //        this.setState({\r\n  //         tweet:res.data.statuses\r\n  //        })\r\n  //     })\r\n\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Search component</h1>\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          className=\"form-inline my-2 my-lg-0 mt-5\"\r\n        >\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <select className=\"mdb-select md-form mr-2\">\r\n            <option value={this.state.count} disabled selected>\r\n              Number of tweets\r\n            </option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"30\">30</option>\r\n          </select>\r\n          <button className=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n        {/* <Navbar  /> */}\r\n        {/* <Search twitterSearch={this.Git} /> */}\r\n        <div className=\"container\">\r\n          <div className=\"row mt-5\">\r\n            {this.state.tweet.map((tw) => (\r\n              <div className=\"col-md-4 mt-4\" key={tw.id_str}>\r\n                <TwitterTweetEmbed tweetId={tw.id_str} />\r\n\r\n                <a href=\"\" className=\"btn btn-danger btn-blocl\">\r\n                  Ajouter au favoris\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <footer className=\"page-footer font-small blue pt-4 bg-primary text-white mt-5\">\r\n          <div className=\"text-center text-md-left\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt-md-0 mt-3\">\r\n                <h5 className=\"text-uppercase\">Footer Content</h5>\r\n                <p>\r\n                  Here you can use rows and columns to organize your footer\r\n                  content.\r\n                </p>\r\n              </div>\r\n\r\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n              <div className=\"col-md-3 mb-md-0 mb-3 \">\r\n                <h5 className=\"text-uppercase\">Links</h5>\r\n\r\n                {/* <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"#!\">Link 1</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Link 2</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Link 3</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Link 4</a>\r\n                  </li>\r\n                </ul> */}\r\n              </div>\r\n\r\n              <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                <h5 className=\"text-uppercase\">Links</h5>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"#!\">Link 1</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Link 2</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Link 3</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Link 4</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"footer-copyright text-center py-3\">\r\n            © 2020 Copyright:\r\n            <a href=\"https://mdbootstrap.com/\"> MDBootstrap.com</a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import Search from \"./Search\";\r\nimport Header from \"./components/header/Header\";\r\nimport Main from \"./components/main/Main\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"App container mt-5\">\r\n          <Main />\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Search from \"./components/Search\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}